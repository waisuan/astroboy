// Code generated by MockGen. DO NOT EDIT.
// Source: internal/dependencies/db.go

// Package mock_dependencies is a generated GoMock package.
package dependencies

import (
	context "context"
	reflect "reflect"

	expression "github.com/aws/aws-sdk-go-v2/feature/dynamodb/expression"
	gomock "github.com/golang/mock/gomock"
)

// MockIDatabase is a mock of IDatabase interface.
type MockIDatabase struct {
	ctrl     *gomock.Controller
	recorder *MockIDatabaseMockRecorder
}

// MockIDatabaseMockRecorder is the mock recorder for MockIDatabase.
type MockIDatabaseMockRecorder struct {
	mock *MockIDatabase
}

// NewMockIDatabase creates a new mock instance.
func NewMockIDatabase(ctrl *gomock.Controller) *MockIDatabase {
	mock := &MockIDatabase{ctrl: ctrl}
	mock.recorder = &MockIDatabaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDatabase) EXPECT() *MockIDatabaseMockRecorder {
	return m.recorder
}

// PutItem mocks base method.
func (m *MockIDatabase) PutItem(ctx context.Context, input interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutItem", ctx, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// PutItem indicates an expected call of PutItem.
func (mr *MockIDatabaseMockRecorder) PutItem(ctx, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutItem", reflect.TypeOf((*MockIDatabase)(nil).PutItem), ctx, input)
}

// QueryWithIndex mocks base method.
func (m *MockIDatabase) QueryWithIndex(ctx context.Context, indexName string, expr expression.Expression) (DbQueryOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "QueryWithIndex", ctx, indexName, expr)
	ret0, _ := ret[0].(DbQueryOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// QueryWithIndex indicates an expected call of QueryWithIndex.
func (mr *MockIDatabaseMockRecorder) QueryWithIndex(ctx, indexName, expr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "QueryWithIndex", reflect.TypeOf((*MockIDatabase)(nil).QueryWithIndex), ctx, indexName, expr)
}
